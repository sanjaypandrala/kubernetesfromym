pre-requisites 
centos 7 64 bit /kernel 3.10.x
yum install -y epel-release
yum install -y docker
systemctl enable docker
systemctl start docker
docker version
docker info
docker search centos
docker pull centos:centos7
docker ps -a
docker network ls
docker network inspect (network name)
docer stats
docker run -it -c 256 -m 300M centos:centos7 /bin/bash
docker start
docker stop
docker restart
docker commit [container id]
docker tag [container id] < repo : tags >
docker rm [contain id]
docker logs [container id]
mkdir -p /var/www/html
echo "this is naga's test docker site" > /var/www/html/demopage.txt
docker run -d -p 8080:8080 --name="python_web" -v /usr/sbin:/usr/sbin -v /usr/bin:/usr/bin -v /usr/lib64:/usr/lib64 -w /var/www/hmlt -v /var/www/html centos:centos7 /bin/python -m SimpleHTTPServer 8080

-d , --detach ### run container in bg and print cid
-p , -- publish value ### pub a container's port to the host def

-v , --volume value ### bind mount a volume def
-w , --workdir string ### working directory inside the cont

netstat -tulpn | grep 8080
curl localhost:8080/demowebpage.txt
docker network inspect bridge
docker commit cid
###############
### configuring the custom docker networking ###
systemctl stop docker.service
ip link set dev docker0 down
sysctl net-ipv4.conf.all.forwarding
### update new subnet in the /etc/sysconfig/docker-network add the follwing to DOCKER_NETWORK_OPTIONS :-

###Example
DOCKER_NETWORK_OPTIONS="--bip=10.10.10.50/24"

###Remove default subnet's MASQUERADE rules from the POSTROUTING chain in newtwork iptables.

 iptables -t nat -L -n
 iptables - -t nat -F POSTROUTING
 iptables -F DOCKER
### start docker service
systemctl start docker.service
ip addr show docker0 ### to see the new of the container ###
### verify that the MASQUERADE rule have new subnet added to the POSTROUTING chain.

ip tables -t nat -L -n

### validation 
### check the new subnet is on the bridge now
docker network inspect bridge

### check IP Address of the container
docker inspect -f '{{ NetworkSetting.IPAddress }}' [cid]

### run a docker container and check container have
docker run -it [container name] /bin/bash
df -h
### inside the container yum install -y net-tools to get ipconfig working ###
yum install -y net-tools
ping google.com















